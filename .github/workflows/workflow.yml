name: CI/CD Pipelines
on:
    push:
        branches: [ main ]
jobs:
  CI:
    runs-on: Ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
            node-version: 18.6.0
      - run: npm install
      - run: npm run build --if-present
  CD:
    runs-on: Ubuntu-20.04
    strategy:
      matrix:
        node-version: ['18.6.0']
        appname: ['donghakang-app']
        deploy-group: ['Prod']
    needs: [CI]
    steps:
      - uses: actions/checkout@v2
      # Initialize Node.js
      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      # Install project dependencies and build
      - name: Install dependencies
        run: npm install
      - name: Run build
        run: npm run build
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: AWS Create Deployment
        run: |
          aws deploy create-deployment \
           --application-name ${{ matrix.appname }} \
           --deployment-config-name CodeDeployDefault.AllAtOnce \
           --deployment-group-name ${{ matrix.deploy-group }} \
           --file-exists-behavior OVERWRITE \
           --github-location repository=${{ github.repository }},commitId=${{ github.sha }}